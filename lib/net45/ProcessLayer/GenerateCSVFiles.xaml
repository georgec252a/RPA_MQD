<Activity mc:Ignorable="sap sap2010" x:Class="GenerateCSVFiles" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_raportName" Type="InArgument(x:String)" />
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_timeStamp" Type="InArgument(x:String)" />
    <x:Property Name="out_csvReport" Type="OutArgument(x:String)" />
    <x:Property Name="out_finalReport" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <this:GenerateCSVFiles.in_timeStamp>
    <InArgument x:TypeArguments="x:String" />
  </this:GenerateCSVFiles.in_timeStamp>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2626.4,6421.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GenerateCSVFiles_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="66">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="66">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GenerateCSVFiles" sap:VirtualizedContainerService.HintSize="1041.6,6356.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="extractedFile" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="WrkBk" />
      <Variable x:TypeArguments="x:String" Name="vehType" />
      <Variable x:TypeArguments="sd:DataTable" Name="raportForDataLake" />
      <Variable x:TypeArguments="sd:DataTable" Name="newVehicles" />
      <Variable x:TypeArguments="sd:DataTable" Name="dataTableExtractedFile" />
      <Variable x:TypeArguments="x:String" Name="fHBText" />
      <Variable x:TypeArguments="x:String" Name="ffBText" />
      <Variable x:TypeArguments="x:String" Name="calfaText" />
      <Variable x:TypeArguments="x:String" Name="fHaText" />
      <Variable x:TypeArguments="x:String" Name="ffaText" />
      <Variable x:TypeArguments="x:String" Name="CBText" />
      <Variable x:TypeArguments="x:String" Name="referintaPieceText" />
      <Variable x:TypeArguments="x:String" Name="referintaIdentifiantPieceText" />
      <Variable x:TypeArguments="x:String" Name="cupluText" />
      <Variable x:TypeArguments="x:String" Name="dataText" />
      <Variable x:TypeArguments="x:String" Name="cupluExcel" />
      <Variable x:TypeArguments="x:String" Name="dataExcel" />
      <Variable x:TypeArguments="x:String" Name="calfa1Gauche" />
      <Variable x:TypeArguments="x:String" Name="calfa2Gauche" />
      <Variable x:TypeArguments="x:String" Name="calfa3Gauche" />
      <Variable x:TypeArguments="x:String" Name="calfa1Droit" />
      <Variable x:TypeArguments="x:String" Name="calfa2Droit" />
      <Variable x:TypeArguments="x:String" Name="calfa3Droit" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1000,6264" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Try body" sap:VirtualizedContainerService.HintSize="963.2,6032.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="921.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Search for files marked as terminated&quot;]" />
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="921.6,662.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(in_config(&quot;downloadLocation&quot;).ToString &amp; in_timeStamp).Where(Function(x) x.Contains(&quot;Arbre&quot;))]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="886.4,537.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="844.8,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[extractedFile]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(file).Substring(0,5)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[(in_config(&quot;filesNames&quot;).ToString).Contains(extractedFile)]" sap:VirtualizedContainerService.HintSize="844.8,344.8" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <Sequence DisplayName="File Foud" sap:VirtualizedContainerService.HintSize="375.2,185.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[Path.GetFileNameWithoutExtension(file).Substring(7) &amp; &quot; file found&quot;]" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Delete the extra files" sap:VirtualizedContainerService.HintSize="425.6,173.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="384,80.8" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[file]" />
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <Sequence DisplayName="Generate the CSVs" sap:VirtualizedContainerService.HintSize="921.6,5104.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:BuildDataTable DataTable="[newVehicles]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="720.8,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;County&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Vehicle_brand&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Brand_type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Brand_extension&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Brand_Version&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Commercial_description&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Subcategory&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Body_type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Number_of_seat&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Cylinder_capacity&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Power_kw&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Fuel_type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Traction_type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Max_length&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Weight&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Authorized_weight&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Max_auth_weight&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Height&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Number_of_axle&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Manufacture_year&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Type_of_Owner&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Owner_quality&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;User&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;User_quality&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;User_county&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Registration_type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;First_registration_date_x0028_LLAAAA_x0029_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Romania_first_registration_date_x0028_LLAAAA_x0029_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Category&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Count&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Luna&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;An&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Tip&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="720.8,3690.4" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Directory.GetFiles(in_config(&quot;downloadLocation&quot;).ToString &amp; in_timeStamp).Where(Function(x) x.Contains(&quot;.xlsx&quot;))]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="685.6,3565.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch DisplayName="Try Catch Read PDF" sap:VirtualizedContainerService.HintSize="644,1699.2" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                      <TryCatch.Try>
                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,1468" sap2010:WorkflowViewState.IdRef="Sequence_16">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="variable2" />
                            <Variable x:TypeArguments="x:String" Name="fHa1Gauche" />
                            <Variable x:TypeArguments="x:String" Name="fHa2Gauche" />
                            <Variable x:TypeArguments="x:String" Name="fHa3Gauche" />
                            <Variable x:TypeArguments="x:String" Name="fHa1Droit" />
                            <Variable x:TypeArguments="x:String" Name="fHa2Droit" />
                            <Variable x:TypeArguments="x:String" Name="fHa3Droit" />
                            <Variable x:TypeArguments="x:String" Name="variable3" />
                            <Variable x:TypeArguments="x:String" Name="ffa3Droit" />
                            <Variable x:TypeArguments="x:String" Name="ffa1Gauche" />
                            <Variable x:TypeArguments="x:String" Name="ffa2Gauche" />
                            <Variable x:TypeArguments="x:String" Name="ffa3Gauche" />
                            <Variable x:TypeArguments="x:String" Name="ffa1Droit" />
                            <Variable x:TypeArguments="x:String" Name="ffa2Droit" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ReadPDFText DisplayName="Read PDF Text" FileName="C:\Users\bw67213\OneDrive - Alliance\3. RPA\2. Proiecte in dezvoltare\5. MQD\Fisiere MQD\Teste\Arbre secondaireþCouple 15X71þ5_Termine\Arbre secondaireþCouple 15X71þ5_Termine_322416095R_20230412_222753.pdf" sap:VirtualizedContainerService.HintSize="333.6,83.2" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" PreserveFormatting="False" Range="All" Text="[extractedFile]" />
                          <Assign DisplayName="Extrage ziua din data din PDF" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[dataText]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[extractedFile.Substring(System.Text.RegularExpressions.Regex.Match(extractedFile,"\d\d\.\d\d\.\d\d\d\d").Index,2)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="LOG Extrage ziua din data din PDF" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[dataText]" />
                          <Assign DisplayName="Extrage referinta de piesa din PDF" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[referintaPieceText]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[extractedFile.Substring(System.Text.RegularExpressions.Regex.Match(extractedFile,"Numéro pièce: \d\d\d\d\d\d\d\d\dR").Index+14,10)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="LOG Extrage referinta de piesa din PDF" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[referintaPieceText]" />
                          <Assign DisplayName="Extrage cuplul din PDF" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[cupluText]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[extractedFile.Substring(System.Text.RegularExpressions.Regex.Match(extractedFile,"/Couple \d\dX\d\d/").Index+8,5)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="LOG Extrage cuplul din PDF" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[cupluText]" />
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Extract ffa" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ExtractFromTable.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="extractedFile">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="extractedFile" />
                              </InArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val1Gauche">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa1Gauche" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val2Gauche">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa2Gauche" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val3Gauche">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa3Gauche" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val1Droit">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa1Droit" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val2Droit">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa2Droit" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val3Droit">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa3Droit" />
                              </OutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="regExExpression">
                                <Literal x:TypeArguments="x:String">\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?\s+ffa\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))? ([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))? ([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?</Literal>
                              </InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Extract fHa" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ExtractFromTable.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="extractedFile">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="extractedFile" />
                              </InArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val1Gauche">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa1Gauche" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val2Gauche">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa2Gauche" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val3Gauche">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa3Gauche" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val1Droit">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa1Droit" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val2Droit">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa2Droit" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val3Droit">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fHa3Droit" />
                              </OutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="regExExpression">
                                <Literal x:TypeArguments="x:String">\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?\s+fHa\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))? ([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))? ([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?</Literal>
                              </InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Extract Calfa" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="ExtractFromTable.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="extractedFile">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="extractedFile" />
                              </InArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val1Gauche">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="calfa1Gauche" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val2Gauche">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="calfa2Gauche" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val3Gauche">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="calfa3Gauche" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val1Droit">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="calfa1Droit" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val2Droit">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="calfa2Droit" />
                              </OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="val3Droit">
                                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="calfa3Droit" />
                              </OutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="regExExpression">
                                <Literal x:TypeArguments="x:String">\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?\s+Calfa\s([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))? ([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))? ([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?</Literal>
                              </InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[extractedFile]" />
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;eroare&quot;]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="644,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[extractedFile]" />
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope - Write in Excel File" sap:VirtualizedContainerService.HintSize="644,1600.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" Workbook="[WrkBk]" WorkbookPath="[file]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="610.4,1491.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="tempDt" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadRange AddHeaders="True" DataTable="[tempDt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="568.8,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A7" SheetName="Lista_Detaliata" />
                            <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Luna" DataTable="[tempDt]" DefaultValue="[Now.AddMonths(-1).ToString(&quot;MM&quot;)]" DisplayName="Add Month Column" sap:VirtualizedContainerService.HintSize="568.8,188" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3" />
                            <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="An" DataTable="[tempDt]" DefaultValue="[Now.AddMonths(-1).Year.ToString]" DisplayName="Add Year Column" sap:VirtualizedContainerService.HintSize="568.8,188" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_4" />
                            <If Condition="[Path.GetFileNameWithoutExtension(file).Contains(&quot;_Autoturisme&quot;)]" sap:VirtualizedContainerService.HintSize="568.8,219.2" sap2010:WorkflowViewState.IdRef="If_2">
                              <If.Then>
                                <Assign DisplayName="Add Type VP" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[vehType]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">VP</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Assign DisplayName="Add type VU" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[vehType]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">VU</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                            <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Tip" DataTable="[tempDt]" DefaultValue="[vehType]" DisplayName="Add Veh Type Column" sap:VirtualizedContainerService.HintSize="568.8,188" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_5" />
                            <ui:MergeDataTable Destination="[newVehicles]" DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="568.8,134.4" sap2010:WorkflowViewState.IdRef="MergeDataTable_2" MissingSchemaAction="Ignore" Source="[tempDt]" />
                            <ui:ClearDataTable DataTable="[tempDt]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="568.8,80.8" sap2010:WorkflowViewState.IdRef="ClearDataTable_1" />
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="568.8,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[WrkBk]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="720.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Apply filter: Vehicul Nou&quot;]" />
            <Assign sap:VirtualizedContainerService.HintSize="720.8,60" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[out_finalReport]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[newVehicles.AsEnumerable().Where(function(x) x("Registration_type").ToString = "INSCRIERE VEHICUL NOU").CopyToDataTable]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="720.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Apply filter: Max auth weight &lt;= 5100&quot;]" />
            <Assign sap:VirtualizedContainerService.HintSize="720.8,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[out_finalReport]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[out_finalReport.AsEnumerable().Where(function(x) CInt(x("Max_auth_weight")) &lt;= 5100).CopyToDataTable]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="720.8,60" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[raportForDataLake]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[out_finalReport.Copy]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Tip" DataTable="[raportForDataLake]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="720.8,188" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="720.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Save as csv, report name: DRPCIV_&quot; &amp; Now.AddMonths(-1).ToString(&quot;MMyyyy&quot;) &amp; &quot;.csv&quot;]" />
            <Assign sap:VirtualizedContainerService.HintSize="720.8,60" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[out_csvReport]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_config("downloadLocation").ToString &amp; in_timeStamp &amp; "DRPCIV_" &amp; Now.AddMonths(-1).ToString("MMyyyy") &amp; ".csv"]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" DataTable="[raportForDataLake]" Delimitator="Semicolon" DisplayName="Write CSV" FilePath="[out_csvReport]" sap:VirtualizedContainerService.HintSize="720.8,155.2" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" />
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="966.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Throw Exception="[exception]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>